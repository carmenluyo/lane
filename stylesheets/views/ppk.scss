@font-face {
    font-family: 'Geo579Normal';
    src: url('../fonts/Geo579/Geo579Normal.ttf');

}


@import "trig.scss";

  $theta: -180;  // angle that will be increased each loop
  $h: 150;      // x coordinate of circle center
  $k: 150;      // y coordinate of circle center

  $step: 30;  // amount to add to theta each time (degrees)
  $r: 40;
  $i: 0;
  $timeInc: 0;


  .fontLogo {
      position: relative;
      height: $h*2px;

      div {
        position: absolute;
        font-size: 52px;
        font-family: 'Geo579Normal';
        color: #85764e;
    }
  }

  @while $theta < 360 {

      .fontLogo div.pos-#{$i}  {

          $x: $h + ($r * cos($theta));
          $y: $k + ($r * sin($theta));

          top: #{$y}px;
          left: #{$x}px;
          transform: rotate(($i+8)*30deg);

          -webkit-animation-delay: #{$timeInc}s;
          -moz-animation-delay: #{$timeInc}s;
          animation-delay: #{$timeInc}s;        

          $theta: $theta + $step;
          $i: $i + 1;
          $timeInc: $timeInc + 0.35; 
      }
  }

  .fontLogo div.pos-4 {
      color: antiquewhite !important;
  }
.fontLogo{
  float: right;
  top: -82px;
  right: 317px;
}




/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}
